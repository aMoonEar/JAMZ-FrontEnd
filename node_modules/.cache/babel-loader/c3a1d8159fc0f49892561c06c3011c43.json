{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nexports.setDefaultProps = setDefaultProps;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _bindRaf = require('./lib/bindRaf');\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* global window, document */\n\n\nvar OnVisible = function (_Component) {\n  _inherits(OnVisible, _Component);\n\n  function OnVisible() {\n    var _ref;\n\n    _classCallCheck(this, OnVisible);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, (_ref = OnVisible.__proto__ || Object.getPrototypeOf(OnVisible)).call.apply(_ref, [this].concat(args)));\n\n    _this.onScroll = (0, _bindRaf.bindRaf)(_this.onScroll.bind(_this));\n    _this.state = {\n      visible: false,\n      bottom: 0,\n      top: 0\n    };\n    return _this;\n  }\n\n  _createClass(OnVisible, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.onScroll();\n      window.addEventListener('scroll', this.onScroll);\n      window.addEventListener('resize', this.onScroll);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.stopListening();\n    }\n  }, {\n    key: 'onScroll',\n    value: function onScroll() {\n      var _this2 = this;\n\n      var pos = window.pageYOffset + window.innerHeight;\n      var visbleTriggerRatio = this.props.percent && this.props.percent / 100 || 0.5;\n      var box = this.holder.getBoundingClientRect();\n      var pageYOffset = window.pageYOffset || document.documentElement.scrollTop;\n      var docTop = document.documentElement.clientTop || 0;\n      var top = box.top + box.height * visbleTriggerRatio + (pageYOffset - docTop);\n      var visible = top < pos;\n\n      var end = function end() {\n        _this2.props.onChange(visible);\n      };\n\n      var somethingChanged = this.state.visible !== visible;\n      var becameVisible = visible && !this.state.visible;\n\n      if (somethingChanged) {\n        this.setState(function () {\n          return {\n            visible: visible,\n            top: top\n          };\n        }, end);\n      }\n\n      if (becameVisible && !this.props.bounce) {\n        this.stopListening();\n      }\n    }\n  }, {\n    key: 'stopListening',\n    value: function stopListening() {\n      window.removeEventListener('scroll', this.onScroll);\n      window.removeEventListener('resize', this.onScroll);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props = this.props,\n          className = _props.className,\n          visibleClassName = _props.visibleClassName,\n          children = _props.children,\n          wrappingElement = _props.wrappingElement,\n          attributes = _objectWithoutProperties(_props, ['className', 'visibleClassName', 'children', 'wrappingElement']);\n\n      var visible = this.state.visible;\n      var classes = (0, _classnames2.default)(className, _defineProperty({}, visibleClassName || 'visible', visible)); // other known properties which must not be passed to attributes\n\n      delete attributes.percent;\n      delete attributes.onChange;\n      delete attributes.bounce;\n\n      var invokingProps = _extends({}, attributes, {\n        className: classes,\n        ref: function ref(el) {\n          _this3.holder = el || _this3.holder;\n        }\n      });\n\n      return _react2.default.createElement(wrappingElement, invokingProps, children);\n    }\n  }]);\n\n  return OnVisible;\n}(_react.Component);\n\nOnVisible.defaultProps = {\n  onChange: function onChange() {},\n  // eslint-disable-line no-empty-function\n  bounce: false,\n  wrappingElement: 'div'\n};\nOnVisible.propTypes = {\n  className: _propTypes2.default.string,\n  style: _propTypes2.default.object,\n  visibleClassName: _propTypes2.default.string,\n  children: _propTypes2.default.node,\n  percent: _propTypes2.default.number,\n  onChange: _propTypes2.default.func,\n  bounce: _propTypes2.default.bool,\n  wrappingElement: _propTypes2.default.string\n};\nexports.default = OnVisible;\n\nfunction setDefaultProps(props) {\n  Object.keys(props).forEach(function (key) {\n    OnVisible.defaultProps[key] = props[key];\n  });\n}","map":null,"metadata":{},"sourceType":"script"}